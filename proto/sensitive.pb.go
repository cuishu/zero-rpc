// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: sensitive.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidateInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str string `protobuf:"bytes,1,opt,name=Str,proto3" json:"Str,omitempty"`
}

func (x *ValidateInput) Reset() {
	*x = ValidateInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateInput) ProtoMessage() {}

func (x *ValidateInput) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateInput.ProtoReflect.Descriptor instead.
func (*ValidateInput) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{0}
}

func (x *ValidateInput) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

type ValidateOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSensitive bool `protobuf:"varint,1,opt,name=IsSensitive,proto3" json:"IsSensitive,omitempty"`
}

func (x *ValidateOutput) Reset() {
	*x = ValidateOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateOutput) ProtoMessage() {}

func (x *ValidateOutput) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateOutput.ProtoReflect.Descriptor instead.
func (*ValidateOutput) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{1}
}

func (x *ValidateOutput) GetIsSensitive() bool {
	if x != nil {
		return x.IsSensitive
	}
	return false
}

type FindAllInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str string `protobuf:"bytes,1,opt,name=Str,proto3" json:"Str,omitempty"`
}

func (x *FindAllInput) Reset() {
	*x = FindAllInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllInput) ProtoMessage() {}

func (x *FindAllInput) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllInput.ProtoReflect.Descriptor instead.
func (*FindAllInput) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{2}
}

func (x *FindAllInput) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

type FindAllOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words []string `protobuf:"bytes,1,rep,name=Words,proto3" json:"Words,omitempty"`
}

func (x *FindAllOutput) Reset() {
	*x = FindAllOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllOutput) ProtoMessage() {}

func (x *FindAllOutput) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllOutput.ProtoReflect.Descriptor instead.
func (*FindAllOutput) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{3}
}

func (x *FindAllOutput) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

type AddWordsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words []string `protobuf:"bytes,1,rep,name=Words,proto3" json:"Words,omitempty"`
}

func (x *AddWordsInput) Reset() {
	*x = AddWordsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWordsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWordsInput) ProtoMessage() {}

func (x *AddWordsInput) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWordsInput.ProtoReflect.Descriptor instead.
func (*AddWordsInput) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{4}
}

func (x *AddWordsInput) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

type AddWordsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fail  bool   `protobuf:"varint,1,opt,name=Fail,proto3" json:"Fail,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *AddWordsOutput) Reset() {
	*x = AddWordsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWordsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWordsOutput) ProtoMessage() {}

func (x *AddWordsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWordsOutput.ProtoReflect.Descriptor instead.
func (*AddWordsOutput) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{5}
}

func (x *AddWordsOutput) GetFail() bool {
	if x != nil {
		return x.Fail
	}
	return false
}

func (x *AddWordsOutput) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ListWordsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Limit  int64 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *ListWordsInput) Reset() {
	*x = ListWordsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWordsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWordsInput) ProtoMessage() {}

func (x *ListWordsInput) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWordsInput.ProtoReflect.Descriptor instead.
func (*ListWordsInput) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{6}
}

func (x *ListWordsInput) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListWordsInput) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Word struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Word string `protobuf:"bytes,2,opt,name=Word,proto3" json:"Word,omitempty"`
}

func (x *Word) Reset() {
	*x = Word{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Word) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Word) ProtoMessage() {}

func (x *Word) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Word.ProtoReflect.Descriptor instead.
func (*Word) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{7}
}

func (x *Word) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Word) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

type ListWordsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words []*Word `protobuf:"bytes,1,rep,name=Words,proto3" json:"Words,omitempty"`
}

func (x *ListWordsOutput) Reset() {
	*x = ListWordsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWordsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWordsOutput) ProtoMessage() {}

func (x *ListWordsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWordsOutput.ProtoReflect.Descriptor instead.
func (*ListWordsOutput) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{8}
}

func (x *ListWordsOutput) GetWords() []*Word {
	if x != nil {
		return x.Words
	}
	return nil
}

type RemoveWordsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words []string `protobuf:"bytes,1,rep,name=Words,proto3" json:"Words,omitempty"`
}

func (x *RemoveWordsInput) Reset() {
	*x = RemoveWordsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWordsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWordsInput) ProtoMessage() {}

func (x *RemoveWordsInput) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWordsInput.ProtoReflect.Descriptor instead.
func (*RemoveWordsInput) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveWordsInput) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

type RemoveWordsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fail  bool     `protobuf:"varint,1,opt,name=Fail,proto3" json:"Fail,omitempty"`
	Error []string `protobuf:"bytes,2,rep,name=Error,proto3" json:"Error,omitempty"`
}

func (x *RemoveWordsOutput) Reset() {
	*x = RemoveWordsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensitive_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWordsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWordsOutput) ProtoMessage() {}

func (x *RemoveWordsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_sensitive_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWordsOutput.ProtoReflect.Descriptor instead.
func (*RemoveWordsOutput) Descriptor() ([]byte, []int) {
	return file_sensitive_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveWordsOutput) GetFail() bool {
	if x != nil {
		return x.Fail
	}
	return false
}

func (x *RemoveWordsOutput) GetError() []string {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_sensitive_proto protoreflect.FileDescriptor

var file_sensitive_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x22, 0x21, 0x0a, 0x0d,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x74, 0x72, 0x22,
	0x32, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x49, 0x73, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x22, 0x20, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x53, 0x74, 0x72, 0x22, 0x25, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x25, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x57, 0x6f,
	0x72, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x3e, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x2a, 0x0a, 0x04, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x38, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x25,
	0x0a, 0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x05,
	0x57, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x22,
	0x3d, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xd9,
	0x02, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3f, 0x0a, 0x08,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3c, 0x0a,
	0x07, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x41,
	0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x42, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x48, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x1b, 0x2e, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1c, 0x2e, 0x73,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sensitive_proto_rawDescOnce sync.Once
	file_sensitive_proto_rawDescData = file_sensitive_proto_rawDesc
)

func file_sensitive_proto_rawDescGZIP() []byte {
	file_sensitive_proto_rawDescOnce.Do(func() {
		file_sensitive_proto_rawDescData = protoimpl.X.CompressGZIP(file_sensitive_proto_rawDescData)
	})
	return file_sensitive_proto_rawDescData
}

var file_sensitive_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_sensitive_proto_goTypes = []interface{}{
	(*ValidateInput)(nil),     // 0: sensitive.ValidateInput
	(*ValidateOutput)(nil),    // 1: sensitive.ValidateOutput
	(*FindAllInput)(nil),      // 2: sensitive.FindAllInput
	(*FindAllOutput)(nil),     // 3: sensitive.FindAllOutput
	(*AddWordsInput)(nil),     // 4: sensitive.AddWordsInput
	(*AddWordsOutput)(nil),    // 5: sensitive.AddWordsOutput
	(*ListWordsInput)(nil),    // 6: sensitive.ListWordsInput
	(*Word)(nil),              // 7: sensitive.Word
	(*ListWordsOutput)(nil),   // 8: sensitive.ListWordsOutput
	(*RemoveWordsInput)(nil),  // 9: sensitive.RemoveWordsInput
	(*RemoveWordsOutput)(nil), // 10: sensitive.RemoveWordsOutput
}
var file_sensitive_proto_depIdxs = []int32{
	7,  // 0: sensitive.ListWordsOutput.Words:type_name -> sensitive.Word
	0,  // 1: sensitive.Sensitive.Validate:input_type -> sensitive.ValidateInput
	2,  // 2: sensitive.Sensitive.FindAll:input_type -> sensitive.FindAllInput
	4,  // 3: sensitive.Sensitive.AddWords:input_type -> sensitive.AddWordsInput
	6,  // 4: sensitive.Sensitive.ListWords:input_type -> sensitive.ListWordsInput
	9,  // 5: sensitive.Sensitive.RemoveWords:input_type -> sensitive.RemoveWordsInput
	1,  // 6: sensitive.Sensitive.Validate:output_type -> sensitive.ValidateOutput
	3,  // 7: sensitive.Sensitive.FindAll:output_type -> sensitive.FindAllOutput
	5,  // 8: sensitive.Sensitive.AddWords:output_type -> sensitive.AddWordsOutput
	8,  // 9: sensitive.Sensitive.ListWords:output_type -> sensitive.ListWordsOutput
	10, // 10: sensitive.Sensitive.RemoveWords:output_type -> sensitive.RemoveWordsOutput
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_sensitive_proto_init() }
func file_sensitive_proto_init() {
	if File_sensitive_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sensitive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWordsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWordsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWordsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Word); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWordsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWordsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sensitive_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWordsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sensitive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sensitive_proto_goTypes,
		DependencyIndexes: file_sensitive_proto_depIdxs,
		MessageInfos:      file_sensitive_proto_msgTypes,
	}.Build()
	File_sensitive_proto = out.File
	file_sensitive_proto_rawDesc = nil
	file_sensitive_proto_goTypes = nil
	file_sensitive_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SensitiveClient is the client API for Sensitive service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SensitiveClient interface {
	// validate
	Validate(ctx context.Context, in *ValidateInput, opts ...grpc.CallOption) (*ValidateOutput, error)
	FindAll(ctx context.Context, in *FindAllInput, opts ...grpc.CallOption) (*FindAllOutput, error)
	AddWords(ctx context.Context, in *AddWordsInput, opts ...grpc.CallOption) (*AddWordsOutput, error)
	ListWords(ctx context.Context, in *ListWordsInput, opts ...grpc.CallOption) (*ListWordsOutput, error)
	RemoveWords(ctx context.Context, in *RemoveWordsInput, opts ...grpc.CallOption) (*RemoveWordsOutput, error)
}

type sensitiveClient struct {
	cc grpc.ClientConnInterface
}

func NewSensitiveClient(cc grpc.ClientConnInterface) SensitiveClient {
	return &sensitiveClient{cc}
}

func (c *sensitiveClient) Validate(ctx context.Context, in *ValidateInput, opts ...grpc.CallOption) (*ValidateOutput, error) {
	out := new(ValidateOutput)
	err := c.cc.Invoke(ctx, "/sensitive.Sensitive/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sensitiveClient) FindAll(ctx context.Context, in *FindAllInput, opts ...grpc.CallOption) (*FindAllOutput, error) {
	out := new(FindAllOutput)
	err := c.cc.Invoke(ctx, "/sensitive.Sensitive/FindAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sensitiveClient) AddWords(ctx context.Context, in *AddWordsInput, opts ...grpc.CallOption) (*AddWordsOutput, error) {
	out := new(AddWordsOutput)
	err := c.cc.Invoke(ctx, "/sensitive.Sensitive/AddWords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sensitiveClient) ListWords(ctx context.Context, in *ListWordsInput, opts ...grpc.CallOption) (*ListWordsOutput, error) {
	out := new(ListWordsOutput)
	err := c.cc.Invoke(ctx, "/sensitive.Sensitive/ListWords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sensitiveClient) RemoveWords(ctx context.Context, in *RemoveWordsInput, opts ...grpc.CallOption) (*RemoveWordsOutput, error) {
	out := new(RemoveWordsOutput)
	err := c.cc.Invoke(ctx, "/sensitive.Sensitive/RemoveWords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SensitiveServer is the server API for Sensitive service.
type SensitiveServer interface {
	// validate
	Validate(context.Context, *ValidateInput) (*ValidateOutput, error)
	FindAll(context.Context, *FindAllInput) (*FindAllOutput, error)
	AddWords(context.Context, *AddWordsInput) (*AddWordsOutput, error)
	ListWords(context.Context, *ListWordsInput) (*ListWordsOutput, error)
	RemoveWords(context.Context, *RemoveWordsInput) (*RemoveWordsOutput, error)
}

// UnimplementedSensitiveServer can be embedded to have forward compatible implementations.
type UnimplementedSensitiveServer struct {
}

func (*UnimplementedSensitiveServer) Validate(context.Context, *ValidateInput) (*ValidateOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validate not implemented")
}
func (*UnimplementedSensitiveServer) FindAll(context.Context, *FindAllInput) (*FindAllOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAll not implemented")
}
func (*UnimplementedSensitiveServer) AddWords(context.Context, *AddWordsInput) (*AddWordsOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddWords not implemented")
}
func (*UnimplementedSensitiveServer) ListWords(context.Context, *ListWordsInput) (*ListWordsOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWords not implemented")
}
func (*UnimplementedSensitiveServer) RemoveWords(context.Context, *RemoveWordsInput) (*RemoveWordsOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveWords not implemented")
}

func RegisterSensitiveServer(s *grpc.Server, srv SensitiveServer) {
	s.RegisterService(&_Sensitive_serviceDesc, srv)
}

func _Sensitive_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SensitiveServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sensitive.Sensitive/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SensitiveServer).Validate(ctx, req.(*ValidateInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sensitive_FindAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SensitiveServer).FindAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sensitive.Sensitive/FindAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SensitiveServer).FindAll(ctx, req.(*FindAllInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sensitive_AddWords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddWordsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SensitiveServer).AddWords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sensitive.Sensitive/AddWords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SensitiveServer).AddWords(ctx, req.(*AddWordsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sensitive_ListWords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWordsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SensitiveServer).ListWords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sensitive.Sensitive/ListWords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SensitiveServer).ListWords(ctx, req.(*ListWordsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sensitive_RemoveWords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveWordsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SensitiveServer).RemoveWords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sensitive.Sensitive/RemoveWords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SensitiveServer).RemoveWords(ctx, req.(*RemoveWordsInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sensitive_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sensitive.Sensitive",
	HandlerType: (*SensitiveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Validate",
			Handler:    _Sensitive_Validate_Handler,
		},
		{
			MethodName: "FindAll",
			Handler:    _Sensitive_FindAll_Handler,
		},
		{
			MethodName: "AddWords",
			Handler:    _Sensitive_AddWords_Handler,
		},
		{
			MethodName: "ListWords",
			Handler:    _Sensitive_ListWords_Handler,
		},
		{
			MethodName: "RemoveWords",
			Handler:    _Sensitive_RemoveWords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sensitive.proto",
}
