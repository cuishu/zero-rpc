// Code generated by zero-rpc. DO NOT EDIT.

package main

import (
	"fmt"

	"{{.Package}}/config"
	"{{.Package}}/proto"
	"{{.Package}}/server"
	"{{.Package}}/svc"

	"github.com/zeromicro/go-zero/core/discov"
	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

func main() {
	config, err := config.NewConfig("config/config.yaml")
	if err != nil {
		panic(err)
	}
	srv, err := zrpc.NewServer(zrpc.RpcServerConf{
		ListenOn: config.Listen,
		Etcd: discov.EtcdConf{
			Hosts: config.Etcd.Hosts,
		},
	}, func(s *grpc.Server) {
		proto.Register{{.Service.Name}}Server(s, server.New{{.Service.Name}}Server(svc.NewSvc(config)))
	})
	if err != nil {
		panic(err)
	}
	fmt.Println("listen:", config.Listen)
	srv.Start()
}
